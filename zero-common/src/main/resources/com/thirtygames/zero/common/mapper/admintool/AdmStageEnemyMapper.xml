<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thirtygames.zero.common.mapper.admintool.AdmStageEnemyMapper">
    <insert id="save" parameterType="com.thirtygames.zero.common.model.meta.StageEnemy"
        keyProperty="enemyId" keyColumn="enemyId">
        insert into StageEnemy (
        	 stageKey, turn, unitType, level, scale, hpScaler,
			 boss, x, z, trapRadius, marker, enemyName, summoned, sight,
			 skill0Lv, skill1Lv, skill2Lv, skill3Lv, skill4Lv, regiment, spawnEffect, corpsNo, corpsSize, corpsBegin, corpsEnd, corpsInterval, corpsRelative, modYmdt)
        values (
        	#{stageKey}, #{turn}, #{unitType}, #{level}, #{scale}, #{hpScaler},
        	#{boss}, #{x}, #{z}, #{trapRadius}, #{marker}, #{enemyName}, #{summoned}, #{sight},
        	#{skill0Lv}, #{skill1Lv}, #{skill2Lv}, #{skill3Lv}, #{skill4Lv}, #{regiment}, #{spawnEffect}, #{corpsNo}, #{corpsSize}, #{corpsBegin}, #{corpsEnd}, #{corpsInterval}, #{corpsRelative}, now()
		)
        on duplicate key update
        	stageKey = #{stageKey},
			turn = #{turn},
			unitType = #{unitType},
			level = #{level},
			scale = #{scale},
			hpScaler = #{hpScaler},
			boss = #{boss},
			x = #{x},
			z = #{z},
			trapRadius = #{trapRadius},
			marker = #{marker},
			enemyName = #{enemyName},
			summoned = #{summoned},
			sight = #{sight},
			skill0Lv = #{skill0Lv},
			skill1Lv = #{skill1Lv},
			skill2Lv = #{skill2Lv},
			skill3Lv = #{skill3Lv},
			skill4Lv = #{skill4Lv},
			regiment = #{regiment},
			spawnEffect = #{spawnEffect},
			corpsNo = #{corpsNo},
			corpsSize = #{corpsSize},
			corpsBegin = #{corpsBegin},
			corpsEnd = #{corpsEnd},
			corpsInterval = #{corpsInterval},
			corpsRelative = #{corpsRelative},
			modYmdt = now()
    </insert>
    
	<update id="update" parameterType="com.thirtygames.zero.common.model.meta.StageEnemy">
		update StageEnemy
		<trim prefix="SET" suffixOverrides=",">
			modYmdt = now(),
        	<if test="stageKey != null">stageKey = #{stageKey},</if>  
        	<if test="turn != null">turn = #{turn},</if>  
        	<if test="unitType != null">unitType = #{unitType},</if>  
        	<if test="level != null">level = #{level},</if>
        	<if test="scale != null">scale = #{scale},</if>  
        	<if test="hpScaler != null">hpScaler = #{hpScaler},</if>  
        	<if test="boss != null">boss = #{boss},</if>  
        	<if test="x != null">x = #{x},</if>  
        	<if test="z != null">z = #{z},</if>  
        	<if test="trapRadius != null">trapRadius = #{trapRadius},</if>  
        	<if test="marker != null">marker = #{marker},</if>  
        	<if test="enemyName != null">enemyName = #{enemyName},</if>  
        	<if test="summoned != null">summoned = #{summoned},</if>  
        	<if test="sight != null">sight = #{sight},</if>  
        	<if test="skill0Lv != null">skill0Lv = #{skill0Lv},</if>  
        	<if test="skill1Lv != null">skill1Lv = #{skill1Lv},</if>  
        	<if test="skill2Lv != null">skill2Lv = #{skill2Lv},</if>  
        	<if test="skill3Lv != null">skill3Lv = #{skill3Lv},</if>  
        	<if test="skill4Lv != null">skill4Lv = #{skill4Lv},</if>  
        	<if test="regiment != null">regiment = #{regiment},</if>  
        	<if test="spawnEffect != null">spawnEffect = #{spawnEffect},</if>  
        	<if test="corpsNo != null">corpsNo = #{corpsNo},</if>  
        	<if test="corpsSize != null">corpsSize = #{corpsSize},</if>  
        	<if test="corpsBegin != null">corpsBegin = #{corpsBegin},</if>  
        	<if test="corpsEnd != null">corpsEnd = #{corpsEnd},</if>  
        	<if test="corpsInterval != null">corpsInterval = #{corpsInterval},</if>  
        	<if test="corpsRelative != null">corpsRelative = #{corpsRelative},</if>  
		</trim>
		where enemyId = #{enemyId}
	</update>

    <select id="get" parameterType="map" resultType="com.thirtygames.zero.common.model.meta.StageEnemy">
        select * from StageEnemy where enemyId = #{id}
    </select>

    <select id="search" parameterType="com.thirtygames.zero.common.model.meta.StageEnemy" resultType="com.thirtygames.zero.common.model.meta.StageEnemy">
        select
        	 stgEnm.enemyId, stgEnm.stageKey, stgEnm.turn, stgEnm.unitType, stgEnm.level, stgEnm.scale, stgEnm.hpScaler,
			 stgEnm.boss, stgEnm.x, stgEnm.z, stgEnm.trapRadius, stgEnm.marker, stgEnm.enemyName, stgEnm.summoned, stgEnm.sight,
			 stgEnm.skill0Lv, stgEnm.skill1Lv, stgEnm.skill2Lv, stgEnm.skill3Lv, stgEnm.skill4Lv, stgEnm.regiment, stgEnm.spawnEffect, stgEnm.corpsNo, stgEnm.corpsSize, stgEnm.corpsBegin, stgEnm.corpsEnd, stgEnm.corpsInterval, stgEnm.corpsRelative, 
			 date_format(stgEnm.modYmdt, '%Y-%m-%d %H:%i:%s') as modYmdt
		from StageEnemy stgEnm
		<where>
			1=1
			<if test="model.rules != null">			
				<foreach collection="model.rules" item="rule" index="index" separator="" open="" close="">
		           	and ${rule.field}
		           	<choose>
		           		<when test="rule.op == 'eq'"> = </when>
		           		<when test="rule.op == 'le'"> &lt;= </when>
		           		<when test="rule.op == 'ge'"> &gt;= </when>
		           	</choose> 
		           	#{rule.data}
		       	</foreach>
	       	</if>
       	</where>
       	
		<if test="sidx != '' and sord != ''">
			order by ${sidx} ${sord}
		</if>
	
		<if test="length &gt; 0">limit #{from}, #{length}</if>
    </select>
    
    <select id="excel" parameterType="com.thirtygames.zero.common.model.meta.StageEnemy" resultType="com.thirtygames.zero.common.model.meta.StageEnemy">
        select
        	 stgEnm.enemyId, stgEnm.stageKey, stgEnm.turn, stgEnm.unitType, stgEnm.level, stgEnm.scale, stgEnm.hpScaler,
			 stgEnm.boss, stgEnm.x, stgEnm.z, stgEnm.trapRadius, stgEnm.marker, stgEnm.enemyName, stgEnm.summoned, stgEnm.sight,
			 stgEnm.skill0Lv, stgEnm.skill1Lv, stgEnm.skill2Lv, stgEnm.skill3Lv, stgEnm.skill4Lv, stgEnm.regiment, stgEnm.spawnEffect, stgEnm.corpsNo, stgEnm.corpsSize, stgEnm.corpsBegin, stgEnm.corpsEnd, stgEnm.corpsInterval, stgEnm.corpsRelative, 
			 date_format(stgEnm.modYmdt, '%Y-%m-%d %H:%i:%s') as modYmdt
		from StageEnemy stgEnm
		<where>
			1=1
			<if test="model.rules != null">			
				<foreach collection="model.rules" item="rule" index="index" separator="" open="" close="">
		           	and ${rule.field}
		           	<choose>
		           		<when test="rule.op == 'eq'"> = </when>
		           		<when test="rule.op == 'le'"> &lt;= </when>
		           		<when test="rule.op == 'ge'"> &gt;= </when>
		           	</choose> 
		           	#{rule.data}
		       	</foreach>
	       	</if>
       	</where>
    </select>
    
    <select id="range" parameterType="int" resultType="com.thirtygames.zero.common.model.meta.StageEnemy">
        select * from StageEnemy limit #{from}, #{length}
    </select>
    
    <update id="delete" parameterType="String">
    	delete from StageEnemy 
    	where enemyId = #{id}
    </update>
    
    <select id="size" resultType="int" parameterType="com.thirtygames.zero.common.model.meta.StageEnemy">
        select count(*) from StageEnemy
        <where>
			1=1
			<if test="model.rules != null">			
				<foreach collection="model.rules" item="rule" index="index" separator="" open="" close="">
		           	and ${rule.field}
		           	<choose>
		           		<when test="rule.op == 'eq'"> = </when>
		           		<when test="rule.op == 'le'"> &lt;= </when>
		           		<when test="rule.op == 'ge'"> &gt;= </when>
		           	</choose> 
		           	#{rule.data}
		       	</foreach>
	       	</if>
       	</where>
    </select>
</mapper>